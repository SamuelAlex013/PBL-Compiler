LINE 1 | KEYWORD    -> int
LINE 1 | IDENTIFIER -> arr
LINE 1 | SYMBOL     -> [
LINE 1 | NUMBER     -> 5
LINE 1 | SYMBOL     -> ]
LINE 1 | SYMBOL     -> ;
LINE 3 | KEYWORD    -> int
LINE 3 | IDENTIFIER -> main
LINE 3 | SYMBOL     -> (
LINE 3 | SYMBOL     -> )
LINE 3 | SYMBOL     -> {
LINE 4 | KEYWORD    -> int
LINE 4 | IDENTIFIER -> x
LINE 4 | OPERATOR   -> =
LINE 4 | NUMBER     -> 2
LINE 4 | SYMBOL     -> ;
LINE 5 | IDENTIFIER -> arr
LINE 5 | SYMBOL     -> [
LINE 5 | IDENTIFIER -> x
LINE 5 | SYMBOL     -> ]
LINE 5 | OPERATOR   -> =
LINE 5 | NUMBER     -> 10
LINE 5 | SYMBOL     -> ;
LINE 7 | KEYWORD    -> switch
LINE 7 | SYMBOL     -> (
LINE 7 | IDENTIFIER -> x
LINE 7 | SYMBOL     -> )
LINE 7 | SYMBOL     -> {
LINE 8 | KEYWORD    -> case
LINE 8 | NUMBER     -> 1
LINE 8 | OPERATOR   -> :
LINE 9 | IDENTIFIER -> printf
LINE 9 | SYMBOL     -> (
LINE 9 | UNKNOWN    -> "
LINE 9 | IDENTIFIER -> One
LINE 9 | UNKNOWN    -> "
LINE 9 | SYMBOL     -> )
LINE 9 | SYMBOL     -> ;
LINE 10 | KEYWORD    -> break
LINE 10 | SYMBOL     -> ;
LINE 11 | KEYWORD    -> case
LINE 11 | NUMBER     -> 2
LINE 11 | OPERATOR   -> :
LINE 12 | IDENTIFIER -> printf
LINE 12 | SYMBOL     -> (
LINE 12 | UNKNOWN    -> "
LINE 12 | IDENTIFIER -> Two
LINE 12 | UNKNOWN    -> "
LINE 12 | SYMBOL     -> )
LINE 12 | SYMBOL     -> ;
LINE 13 | KEYWORD    -> break
LINE 13 | SYMBOL     -> ;
LINE 14 | KEYWORD    -> default
LINE 14 | OPERATOR   -> :
LINE 15 | IDENTIFIER -> printf
LINE 15 | SYMBOL     -> (
LINE 15 | UNKNOWN    -> "
LINE 15 | IDENTIFIER -> Default
LINE 15 | UNKNOWN    -> "
LINE 15 | SYMBOL     -> )
LINE 15 | SYMBOL     -> ;
LINE 16 | KEYWORD    -> break
LINE 16 | SYMBOL     -> ;
LINE 17 | SYMBOL     -> }
LINE 19 | KEYWORD    -> return
LINE 19 | NUMBER     -> 0
LINE 19 | SYMBOL     -> ;
LINE 20 | SYMBOL     -> }
