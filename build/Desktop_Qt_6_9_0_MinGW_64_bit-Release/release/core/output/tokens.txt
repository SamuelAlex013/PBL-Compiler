LINE 1 | UNKNOWN    -> #
LINE 1 | IDENTIFIER -> include
LINE 1 | OPERATOR   -> <
LINE 1 | IDENTIFIER -> stdio
LINE 1 | UNKNOWN    -> .
LINE 1 | IDENTIFIER -> h
LINE 1 | OPERATOR   -> >
LINE 2 | UNKNOWN    -> #
LINE 2 | IDENTIFIER -> include
LINE 2 | OPERATOR   -> <
LINE 2 | IDENTIFIER -> math
LINE 2 | UNKNOWN    -> .
LINE 2 | IDENTIFIER -> h
LINE 2 | OPERATOR   -> >
LINE 4 | KEYWORD    -> double
LINE 4 | IDENTIFIER -> f
LINE 4 | SYMBOL     -> (
LINE 4 | KEYWORD    -> double
LINE 4 | IDENTIFIER -> x
LINE 4 | SYMBOL     -> )
LINE 4 | SYMBOL     -> {
LINE 5 | KEYWORD    -> return
LINE 5 | IDENTIFIER -> cos
LINE 5 | SYMBOL     -> (
LINE 5 | IDENTIFIER -> x
LINE 5 | SYMBOL     -> )
LINE 5 | OPERATOR   -> -
LINE 5 | NUMBER     -> 3
LINE 5 | OPERATOR   -> *
LINE 5 | IDENTIFIER -> x
LINE 5 | OPERATOR   -> +
LINE 5 | NUMBER     -> 1
LINE 5 | SYMBOL     -> ;
LINE 6 | SYMBOL     -> }
LINE 8 | KEYWORD    -> double
LINE 8 | IDENTIFIER -> bisection
LINE 8 | SYMBOL     -> (
LINE 8 | KEYWORD    -> double
LINE 8 | IDENTIFIER -> a
LINE 8 | SYMBOL     -> ,
LINE 8 | KEYWORD    -> double
LINE 8 | IDENTIFIER -> b
LINE 8 | SYMBOL     -> )
LINE 9 | SYMBOL     -> {
LINE 10 | KEYWORD    -> double
LINE 10 | IDENTIFIER -> c
LINE 10 | SYMBOL     -> ;
LINE 11 | KEYWORD    -> while
LINE 11 | SYMBOL     -> (
LINE 11 | IDENTIFIER -> b
LINE 11 | OPERATOR   -> -
LINE 11 | IDENTIFIER -> a
LINE 11 | OPERATOR   -> >
LINE 11 | NUMBER     -> 0.0001
LINE 11 | SYMBOL     -> )
LINE 12 | SYMBOL     -> {
LINE 13 | IDENTIFIER -> c
LINE 13 | OPERATOR   -> =
LINE 13 | SYMBOL     -> (
LINE 13 | IDENTIFIER -> a
LINE 13 | OPERATOR   -> +
LINE 13 | IDENTIFIER -> b
LINE 13 | SYMBOL     -> )
LINE 13 | IDENTIFIER -> /
LINE 13 | NUMBER     -> 2
LINE 13 | SYMBOL     -> ;
LINE 14 | IDENTIFIER -> printf
LINE 14 | SYMBOL     -> (
LINE 14 | UNKNOWN    -> "
LINE 14 | IDENTIFIER -> a
LINE 14 | UNKNOWN    -> :
LINE 14 | UNKNOWN    -> %
LINE 14 | IDENTIFIER -> lf
LINE 14 | IDENTIFIER -> c
LINE 14 | UNKNOWN    -> :
LINE 14 | UNKNOWN    -> %
LINE 14 | IDENTIFIER -> lf
LINE 14 | IDENTIFIER -> b
LINE 14 | UNKNOWN    -> :
LINE 14 | UNKNOWN    -> %
LINE 14 | IDENTIFIER -> lf
LINE 14 | UNKNOWN    -> \
LINE 14 | IDENTIFIER -> n
LINE 14 | UNKNOWN    -> "
LINE 14 | SYMBOL     -> ,
LINE 14 | IDENTIFIER -> a
LINE 14 | SYMBOL     -> ,
LINE 14 | IDENTIFIER -> c
LINE 14 | SYMBOL     -> ,
LINE 14 | IDENTIFIER -> b
LINE 14 | SYMBOL     -> )
LINE 14 | SYMBOL     -> ;
LINE 15 | KEYWORD    -> if
LINE 15 | SYMBOL     -> (
LINE 15 | IDENTIFIER -> f
LINE 15 | SYMBOL     -> (
LINE 15 | IDENTIFIER -> a
LINE 15 | SYMBOL     -> )
LINE 15 | OPERATOR   -> *
LINE 15 | IDENTIFIER -> f
LINE 15 | SYMBOL     -> (
LINE 15 | IDENTIFIER -> c
LINE 15 | SYMBOL     -> )
LINE 15 | OPERATOR   -> <
LINE 15 | NUMBER     -> 0
LINE 15 | SYMBOL     -> )
LINE 16 | IDENTIFIER -> b
LINE 16 | OPERATOR   -> =
LINE 16 | IDENTIFIER -> c
LINE 16 | SYMBOL     -> ;
LINE 17 | KEYWORD    -> else
LINE 17 | KEYWORD    -> if
LINE 17 | SYMBOL     -> (
LINE 17 | IDENTIFIER -> f
LINE 17 | SYMBOL     -> (
LINE 17 | IDENTIFIER -> c
LINE 17 | SYMBOL     -> )
LINE 17 | OPERATOR   -> *
LINE 17 | IDENTIFIER -> f
LINE 17 | SYMBOL     -> (
LINE 17 | IDENTIFIER -> b
LINE 17 | SYMBOL     -> )
LINE 17 | OPERATOR   -> <
LINE 17 | NUMBER     -> 0
LINE 17 | SYMBOL     -> )
LINE 18 | IDENTIFIER -> a
LINE 18 | OPERATOR   -> =
LINE 18 | IDENTIFIER -> c
LINE 18 | SYMBOL     -> ;
LINE 19 | SYMBOL     -> }
LINE 20 | KEYWORD    -> return
LINE 20 | IDENTIFIER -> c
LINE 20 | SYMBOL     -> ;
LINE 21 | SYMBOL     -> }
LINE 22 | KEYWORD    -> int
LINE 22 | IDENTIFIER -> main
LINE 22 | SYMBOL     -> (
LINE 22 | SYMBOL     -> )
LINE 23 | SYMBOL     -> {
LINE 24 | KEYWORD    -> double
LINE 24 | IDENTIFIER -> a
LINE 24 | SYMBOL     -> ,
LINE 24 | IDENTIFIER -> b
LINE 24 | SYMBOL     -> ;
LINE 25 | IDENTIFIER -> do
LINE 26 | SYMBOL     -> {
LINE 27 | IDENTIFIER -> printf
LINE 27 | SYMBOL     -> (
LINE 27 | UNKNOWN    -> "
LINE 27 | IDENTIFIER -> Enter
LINE 27 | IDENTIFIER -> the
LINE 27 | IDENTIFIER -> value
LINE 27 | IDENTIFIER -> of
LINE 27 | IDENTIFIER -> a
LINE 27 | IDENTIFIER -> and
LINE 27 | IDENTIFIER -> b
LINE 27 | UNKNOWN    -> :
LINE 27 | UNKNOWN    -> "
LINE 27 | SYMBOL     -> )
LINE 27 | SYMBOL     -> ;
LINE 28 | IDENTIFIER -> scanf
LINE 28 | SYMBOL     -> (
LINE 28 | UNKNOWN    -> "
LINE 28 | UNKNOWN    -> %
LINE 28 | IDENTIFIER -> lf
LINE 28 | UNKNOWN    -> %
LINE 28 | IDENTIFIER -> lf
LINE 28 | UNKNOWN    -> "
LINE 28 | SYMBOL     -> ,
LINE 28 | UNKNOWN    -> &
LINE 28 | IDENTIFIER -> a
LINE 28 | SYMBOL     -> ,
LINE 28 | UNKNOWN    -> &
LINE 28 | IDENTIFIER -> b
LINE 28 | SYMBOL     -> )
LINE 28 | SYMBOL     -> ;
LINE 29 | KEYWORD    -> if
LINE 29 | SYMBOL     -> (
LINE 29 | IDENTIFIER -> f
LINE 29 | SYMBOL     -> (
LINE 29 | IDENTIFIER -> a
LINE 29 | SYMBOL     -> )
LINE 29 | OPERATOR   -> *
LINE 29 | IDENTIFIER -> f
LINE 29 | SYMBOL     -> (
LINE 29 | IDENTIFIER -> b
LINE 29 | SYMBOL     -> )
LINE 29 | OPERATOR   -> >
LINE 29 | NUMBER     -> 0
LINE 29 | SYMBOL     -> )
LINE 30 | IDENTIFIER -> printf
LINE 30 | SYMBOL     -> (
LINE 30 | UNKNOWN    -> "
LINE 30 | IDENTIFIER -> No
LINE 30 | IDENTIFIER -> root
LINE 30 | IDENTIFIER -> exists
LINE 30 | IDENTIFIER -> in
LINE 30 | IDENTIFIER -> the
LINE 30 | IDENTIFIER -> given
LINE 30 | IDENTIFIER -> interval
LINE 30 | UNKNOWN    -> \
LINE 30 | IDENTIFIER -> n
LINE 30 | UNKNOWN    -> "
LINE 30 | SYMBOL     -> )
LINE 30 | SYMBOL     -> ;
LINE 31 | SYMBOL     -> }
LINE 31 | KEYWORD    -> while
LINE 31 | SYMBOL     -> (
LINE 31 | IDENTIFIER -> f
LINE 31 | SYMBOL     -> (
LINE 31 | IDENTIFIER -> a
LINE 31 | SYMBOL     -> )
LINE 31 | OPERATOR   -> *
LINE 31 | IDENTIFIER -> f
LINE 31 | SYMBOL     -> (
LINE 31 | IDENTIFIER -> b
LINE 31 | SYMBOL     -> )
LINE 31 | OPERATOR   -> >
LINE 31 | NUMBER     -> 0
LINE 31 | SYMBOL     -> )
LINE 31 | SYMBOL     -> ;
LINE 33 | IDENTIFIER -> printf
LINE 33 | SYMBOL     -> (
LINE 33 | UNKNOWN    -> "
LINE 33 | IDENTIFIER -> Root
LINE 33 | UNKNOWN    -> :
LINE 33 | UNKNOWN    -> %
LINE 33 | IDENTIFIER -> lf
LINE 33 | UNKNOWN    -> \
LINE 33 | IDENTIFIER -> n
LINE 33 | UNKNOWN    -> "
LINE 33 | SYMBOL     -> ,
LINE 33 | IDENTIFIER -> bisection
LINE 33 | SYMBOL     -> (
LINE 33 | IDENTIFIER -> a
LINE 33 | SYMBOL     -> ,
LINE 33 | IDENTIFIER -> b
LINE 33 | SYMBOL     -> )
LINE 33 | SYMBOL     -> )
LINE 33 | SYMBOL     -> ;
LINE 34 | KEYWORD    -> return
LINE 34 | NUMBER     -> 0
LINE 34 | SYMBOL     -> ;
LINE 35 | SYMBOL     -> }
