LINE 1 | UNKNOWN    -> #
LINE 1 | IDENTIFIER -> include
LINE 1 | OPERATOR   -> <
LINE 1 | IDENTIFIER -> stdio
LINE 1 | UNKNOWN    -> .
LINE 1 | IDENTIFIER -> h
LINE 1 | OPERATOR   -> >
LINE 2 | UNKNOWN    -> #
LINE 2 | IDENTIFIER -> include
LINE 2 | OPERATOR   -> <
LINE 2 | IDENTIFIER -> math
LINE 2 | UNKNOWN    -> .
LINE 2 | IDENTIFIER -> h
LINE 2 | OPERATOR   -> >
LINE 4 | KEYWORD    -> double
LINE 4 | IDENTIFIER -> func
LINE 4 | SYMBOL     -> (
LINE 4 | KEYWORD    -> double
LINE 4 | IDENTIFIER -> x
LINE 4 | SYMBOL     -> ,
LINE 4 | KEYWORD    -> double
LINE 4 | IDENTIFIER -> y
LINE 4 | SYMBOL     -> )
LINE 5 | SYMBOL     -> {
LINE 6 | KEYWORD    -> return
LINE 6 | SYMBOL     -> (
LINE 6 | IDENTIFIER -> y
LINE 6 | OPERATOR   -> -
LINE 6 | IDENTIFIER -> x
LINE 6 | SYMBOL     -> )
LINE 6 | IDENTIFIER -> /
LINE 6 | SYMBOL     -> (
LINE 6 | IDENTIFIER -> y
LINE 6 | OPERATOR   -> +
LINE 6 | IDENTIFIER -> x
LINE 6 | SYMBOL     -> )
LINE 6 | SYMBOL     -> ;
LINE 7 | SYMBOL     -> }
LINE 9 | KEYWORD    -> double
LINE 9 | IDENTIFIER -> euler
LINE 9 | SYMBOL     -> (
LINE 9 | KEYWORD    -> double
LINE 9 | IDENTIFIER -> x0
LINE 9 | SYMBOL     -> ,
LINE 9 | KEYWORD    -> double
LINE 9 | IDENTIFIER -> y0
LINE 9 | SYMBOL     -> ,
LINE 9 | KEYWORD    -> double
LINE 9 | IDENTIFIER -> h
LINE 9 | SYMBOL     -> ,
LINE 9 | KEYWORD    -> double
LINE 9 | IDENTIFIER -> num
LINE 9 | SYMBOL     -> )
LINE 10 | SYMBOL     -> {
LINE 11 | KEYWORD    -> int
LINE 11 | IDENTIFIER -> n
LINE 11 | OPERATOR   -> =
LINE 11 | SYMBOL     -> (
LINE 11 | IDENTIFIER -> num
LINE 11 | OPERATOR   -> -
LINE 11 | IDENTIFIER -> x0
LINE 11 | SYMBOL     -> )
LINE 11 | IDENTIFIER -> /
LINE 11 | SYMBOL     -> (
LINE 11 | KEYWORD    -> double
LINE 11 | SYMBOL     -> )
LINE 11 | IDENTIFIER -> h
LINE 11 | SYMBOL     -> ;
LINE 12 | KEYWORD    -> double
LINE 12 | IDENTIFIER -> x
LINE 12 | SYMBOL     -> [
LINE 12 | IDENTIFIER -> n
LINE 12 | OPERATOR   -> +
LINE 12 | NUMBER     -> 1
LINE 12 | SYMBOL     -> ]
LINE 12 | SYMBOL     -> ,
LINE 12 | IDENTIFIER -> y
LINE 12 | SYMBOL     -> [
LINE 12 | IDENTIFIER -> n
LINE 12 | OPERATOR   -> +
LINE 12 | NUMBER     -> 1
LINE 12 | SYMBOL     -> ]
LINE 12 | SYMBOL     -> ;
LINE 13 | IDENTIFIER -> x
LINE 13 | SYMBOL     -> [
LINE 13 | NUMBER     -> 0
LINE 13 | SYMBOL     -> ]
LINE 13 | OPERATOR   -> =
LINE 13 | IDENTIFIER -> x0
LINE 13 | SYMBOL     -> ;
LINE 14 | IDENTIFIER -> y
LINE 14 | SYMBOL     -> [
LINE 14 | NUMBER     -> 0
LINE 14 | SYMBOL     -> ]
LINE 14 | OPERATOR   -> =
LINE 14 | IDENTIFIER -> y0
LINE 14 | SYMBOL     -> ;
LINE 15 | IDENTIFIER -> printf
LINE 15 | SYMBOL     -> (
LINE 15 | UNKNOWN    -> "
LINE 15 | IDENTIFIER -> x
LINE 15 | UNKNOWN    -> \
LINE 15 | IDENTIFIER -> t
LINE 15 | UNKNOWN    -> \
LINE 15 | IDENTIFIER -> ty
LINE 15 | UNKNOWN    -> \
LINE 15 | IDENTIFIER -> t
LINE 15 | UNKNOWN    -> \
LINE 15 | IDENTIFIER -> t
LINE 15 | SYMBOL     -> (
LINE 15 | IDENTIFIER -> dy
LINE 15 | OPERATOR   -> /
LINE 15 | IDENTIFIER -> dx
LINE 15 | SYMBOL     -> )
LINE 15 | UNKNOWN    -> \
LINE 15 | IDENTIFIER -> t
LINE 15 | UNKNOWN    -> \
LINE 15 | IDENTIFIER -> tnew_t
LINE 15 | UNKNOWN    -> \
LINE 15 | IDENTIFIER -> n
LINE 15 | UNKNOWN    -> "
LINE 15 | SYMBOL     -> )
LINE 15 | SYMBOL     -> ;
LINE 16 | KEYWORD    -> for
LINE 16 | SYMBOL     -> (
LINE 16 | KEYWORD    -> int
LINE 16 | IDENTIFIER -> i
LINE 16 | OPERATOR   -> =
LINE 16 | NUMBER     -> 0
LINE 16 | SYMBOL     -> ;
LINE 16 | IDENTIFIER -> i
LINE 16 | OPERATOR   -> <
LINE 16 | IDENTIFIER -> n
LINE 16 | SYMBOL     -> ;
LINE 16 | IDENTIFIER -> i
LINE 16 | OPERATOR   -> ++
LINE 16 | SYMBOL     -> )
LINE 17 | SYMBOL     -> {
LINE 18 | IDENTIFIER -> printf
LINE 18 | SYMBOL     -> (
LINE 18 | UNKNOWN    -> "
LINE 18 | UNKNOWN    -> %
LINE 18 | IDENTIFIER -> lf
LINE 18 | UNKNOWN    -> \
LINE 18 | IDENTIFIER -> t
LINE 18 | UNKNOWN    -> %
LINE 18 | IDENTIFIER -> lf
LINE 18 | UNKNOWN    -> \
LINE 18 | IDENTIFIER -> t
LINE 18 | UNKNOWN    -> "
LINE 18 | SYMBOL     -> ,
LINE 18 | IDENTIFIER -> x
LINE 18 | SYMBOL     -> [
LINE 18 | IDENTIFIER -> i
LINE 18 | SYMBOL     -> ]
LINE 18 | SYMBOL     -> ,
LINE 18 | IDENTIFIER -> y
LINE 18 | SYMBOL     -> [
LINE 18 | IDENTIFIER -> i
LINE 18 | SYMBOL     -> ]
LINE 18 | SYMBOL     -> )
LINE 18 | SYMBOL     -> ;
LINE 19 | KEYWORD    -> double
LINE 19 | IDENTIFIER -> f
LINE 19 | OPERATOR   -> =
LINE 19 | IDENTIFIER -> func
LINE 19 | SYMBOL     -> (
LINE 19 | IDENTIFIER -> x
LINE 19 | SYMBOL     -> [
LINE 19 | IDENTIFIER -> i
LINE 19 | SYMBOL     -> ]
LINE 19 | SYMBOL     -> ,
LINE 19 | IDENTIFIER -> y
LINE 19 | SYMBOL     -> [
LINE 19 | IDENTIFIER -> i
LINE 19 | SYMBOL     -> ]
LINE 19 | SYMBOL     -> )
LINE 19 | SYMBOL     -> ;
LINE 20 | IDENTIFIER -> y
LINE 20 | SYMBOL     -> [
LINE 20 | IDENTIFIER -> i
LINE 20 | OPERATOR   -> +
LINE 20 | NUMBER     -> 1
LINE 20 | SYMBOL     -> ]
LINE 20 | OPERATOR   -> =
LINE 20 | IDENTIFIER -> y
LINE 20 | SYMBOL     -> [
LINE 20 | IDENTIFIER -> i
LINE 20 | SYMBOL     -> ]
LINE 20 | OPERATOR   -> +
LINE 20 | IDENTIFIER -> h
LINE 20 | OPERATOR   -> *
LINE 20 | IDENTIFIER -> f
LINE 20 | SYMBOL     -> ;
LINE 21 | IDENTIFIER -> x
LINE 21 | SYMBOL     -> [
LINE 21 | IDENTIFIER -> i
LINE 21 | OPERATOR   -> +
LINE 21 | NUMBER     -> 1
LINE 21 | SYMBOL     -> ]
LINE 21 | OPERATOR   -> =
LINE 21 | IDENTIFIER -> x
LINE 21 | SYMBOL     -> [
LINE 21 | IDENTIFIER -> i
LINE 21 | SYMBOL     -> ]
LINE 21 | OPERATOR   -> +
LINE 21 | IDENTIFIER -> h
LINE 21 | SYMBOL     -> ;
LINE 22 | IDENTIFIER -> printf
LINE 22 | SYMBOL     -> (
LINE 22 | UNKNOWN    -> "
LINE 22 | UNKNOWN    -> %
LINE 22 | IDENTIFIER -> lf
LINE 22 | UNKNOWN    -> \
LINE 22 | IDENTIFIER -> t
LINE 22 | UNKNOWN    -> %
LINE 22 | IDENTIFIER -> lf
LINE 22 | UNKNOWN    -> \
LINE 22 | IDENTIFIER -> n
LINE 22 | UNKNOWN    -> "
LINE 22 | SYMBOL     -> ,
LINE 22 | IDENTIFIER -> f
LINE 22 | SYMBOL     -> ,
LINE 22 | IDENTIFIER -> y
LINE 22 | SYMBOL     -> [
LINE 22 | IDENTIFIER -> i
LINE 22 | OPERATOR   -> +
LINE 22 | NUMBER     -> 1
LINE 22 | SYMBOL     -> ]
LINE 22 | SYMBOL     -> )
LINE 22 | SYMBOL     -> ;
LINE 23 | SYMBOL     -> }
LINE 24 | IDENTIFIER -> printf
LINE 24 | SYMBOL     -> (
LINE 24 | UNKNOWN    -> "
LINE 24 | UNKNOWN    -> %
LINE 24 | IDENTIFIER -> lf
LINE 24 | UNKNOWN    -> \
LINE 24 | IDENTIFIER -> t
LINE 24 | UNKNOWN    -> %
LINE 24 | IDENTIFIER -> lf
LINE 24 | UNKNOWN    -> \
LINE 24 | IDENTIFIER -> n
LINE 24 | UNKNOWN    -> "
LINE 24 | SYMBOL     -> ,
LINE 24 | IDENTIFIER -> x
LINE 24 | SYMBOL     -> [
LINE 24 | IDENTIFIER -> n
LINE 24 | SYMBOL     -> ]
LINE 24 | SYMBOL     -> ,
LINE 24 | IDENTIFIER -> y
LINE 24 | SYMBOL     -> [
LINE 24 | IDENTIFIER -> n
LINE 24 | SYMBOL     -> ]
LINE 24 | SYMBOL     -> )
LINE 24 | SYMBOL     -> ;
LINE 25 | KEYWORD    -> return
LINE 25 | IDENTIFIER -> y
LINE 25 | SYMBOL     -> [
LINE 25 | IDENTIFIER -> n
LINE 25 | SYMBOL     -> ]
LINE 25 | SYMBOL     -> ;
LINE 26 | SYMBOL     -> }
LINE 28 | KEYWORD    -> int
LINE 28 | IDENTIFIER -> main
LINE 28 | SYMBOL     -> (
LINE 28 | SYMBOL     -> )
LINE 29 | SYMBOL     -> {
LINE 30 | KEYWORD    -> double
LINE 30 | IDENTIFIER -> x0
LINE 30 | SYMBOL     -> ,
LINE 30 | IDENTIFIER -> y0
LINE 30 | SYMBOL     -> ,
LINE 30 | IDENTIFIER -> h
LINE 30 | SYMBOL     -> ;
LINE 31 | KEYWORD    -> double
LINE 31 | IDENTIFIER -> num
LINE 31 | SYMBOL     -> ;
LINE 33 | IDENTIFIER -> printf
LINE 33 | SYMBOL     -> (
LINE 33 | UNKNOWN    -> "
LINE 33 | IDENTIFIER -> Enter
LINE 33 | IDENTIFIER -> x0
LINE 33 | UNKNOWN    -> :
LINE 33 | UNKNOWN    -> "
LINE 33 | SYMBOL     -> )
LINE 33 | SYMBOL     -> ;
LINE 34 | IDENTIFIER -> scanf
LINE 34 | SYMBOL     -> (
LINE 34 | UNKNOWN    -> "
LINE 34 | UNKNOWN    -> %
LINE 34 | IDENTIFIER -> lf
LINE 34 | UNKNOWN    -> "
LINE 34 | SYMBOL     -> ,
LINE 34 | UNKNOWN    -> &
LINE 34 | IDENTIFIER -> x0
LINE 34 | SYMBOL     -> )
LINE 34 | SYMBOL     -> ;
LINE 35 | IDENTIFIER -> printf
LINE 35 | SYMBOL     -> (
LINE 35 | UNKNOWN    -> "
LINE 35 | IDENTIFIER -> Enter
LINE 35 | IDENTIFIER -> y0
LINE 35 | UNKNOWN    -> :
LINE 35 | UNKNOWN    -> "
LINE 35 | SYMBOL     -> )
LINE 35 | SYMBOL     -> ;
LINE 36 | IDENTIFIER -> scanf
LINE 36 | SYMBOL     -> (
LINE 36 | UNKNOWN    -> "
LINE 36 | UNKNOWN    -> %
LINE 36 | IDENTIFIER -> lf
LINE 36 | UNKNOWN    -> "
LINE 36 | SYMBOL     -> ,
LINE 36 | UNKNOWN    -> &
LINE 36 | IDENTIFIER -> y0
LINE 36 | SYMBOL     -> )
LINE 36 | SYMBOL     -> ;
LINE 37 | IDENTIFIER -> printf
LINE 37 | SYMBOL     -> (
LINE 37 | UNKNOWN    -> "
LINE 37 | IDENTIFIER -> Enter
LINE 37 | IDENTIFIER -> h
LINE 37 | UNKNOWN    -> :
LINE 37 | UNKNOWN    -> "
LINE 37 | SYMBOL     -> )
LINE 37 | SYMBOL     -> ;
LINE 38 | IDENTIFIER -> scanf
LINE 38 | SYMBOL     -> (
LINE 38 | UNKNOWN    -> "
LINE 38 | UNKNOWN    -> %
LINE 38 | IDENTIFIER -> lf
LINE 38 | UNKNOWN    -> "
LINE 38 | SYMBOL     -> ,
LINE 38 | UNKNOWN    -> &
LINE 38 | IDENTIFIER -> h
LINE 38 | SYMBOL     -> )
LINE 38 | SYMBOL     -> ;
LINE 39 | IDENTIFIER -> printf
LINE 39 | SYMBOL     -> (
LINE 39 | UNKNOWN    -> "
LINE 39 | IDENTIFIER -> Enter
LINE 39 | IDENTIFIER -> the
LINE 39 | IDENTIFIER -> value
LINE 39 | IDENTIFIER -> of
LINE 39 | IDENTIFIER -> x
LINE 39 | KEYWORD    -> for
LINE 39 | IDENTIFIER -> which
LINE 39 | IDENTIFIER -> corresponding
LINE 39 | IDENTIFIER -> to
LINE 39 | IDENTIFIER -> y
LINE 39 | IDENTIFIER -> to
LINE 39 | IDENTIFIER -> be
LINE 39 | IDENTIFIER -> found
LINE 39 | UNKNOWN    -> :
LINE 39 | UNKNOWN    -> "
LINE 39 | SYMBOL     -> )
LINE 39 | SYMBOL     -> ;
LINE 40 | IDENTIFIER -> scanf
LINE 40 | SYMBOL     -> (
LINE 40 | UNKNOWN    -> "
LINE 40 | UNKNOWN    -> %
LINE 40 | IDENTIFIER -> lf
LINE 40 | UNKNOWN    -> "
LINE 40 | SYMBOL     -> ,
LINE 40 | UNKNOWN    -> &
LINE 40 | IDENTIFIER -> num
LINE 40 | SYMBOL     -> )
LINE 40 | SYMBOL     -> ;
LINE 42 | IDENTIFIER -> printf
LINE 42 | SYMBOL     -> (
LINE 42 | UNKNOWN    -> "
LINE 42 | IDENTIFIER -> Approximate
LINE 42 | IDENTIFIER -> value
LINE 42 | IDENTIFIER -> of
LINE 42 | IDENTIFIER -> Integral
LINE 42 | UNKNOWN    -> :
LINE 42 | UNKNOWN    -> %
LINE 42 | IDENTIFIER -> lf
LINE 42 | UNKNOWN    -> \
LINE 42 | IDENTIFIER -> n
LINE 42 | UNKNOWN    -> "
LINE 42 | SYMBOL     -> ,
LINE 42 | IDENTIFIER -> euler
LINE 42 | SYMBOL     -> (
LINE 42 | IDENTIFIER -> x0
LINE 42 | SYMBOL     -> ,
LINE 42 | IDENTIFIER -> y0
LINE 42 | SYMBOL     -> ,
LINE 42 | IDENTIFIER -> h
LINE 42 | SYMBOL     -> ,
LINE 42 | IDENTIFIER -> num
LINE 42 | SYMBOL     -> )
LINE 42 | SYMBOL     -> )
LINE 42 | SYMBOL     -> ;
LINE 44 | KEYWORD    -> return
LINE 44 | NUMBER     -> 0
LINE 44 | SYMBOL     -> ;
LINE 45 | SYMBOL     -> }
