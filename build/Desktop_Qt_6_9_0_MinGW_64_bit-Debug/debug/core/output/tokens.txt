LINE 1 | UNKNOWN    -> #
LINE 1 | IDENTIFIER -> include
LINE 1 | OPERATOR   -> <
LINE 1 | IDENTIFIER -> stdio
LINE 1 | UNKNOWN    -> .
LINE 1 | IDENTIFIER -> h
LINE 1 | OPERATOR   -> >
LINE 3 | KEYWORD    -> void
LINE 3 | IDENTIFIER -> findwaitingtime
LINE 3 | SYMBOL     -> (
LINE 3 | KEYWORD    -> int
LINE 3 | IDENTIFIER -> at
LINE 3 | SYMBOL     -> [
LINE 3 | SYMBOL     -> ]
LINE 3 | SYMBOL     -> ,
LINE 3 | KEYWORD    -> int
LINE 3 | IDENTIFIER -> n
LINE 3 | SYMBOL     -> ,
LINE 3 | KEYWORD    -> int
LINE 3 | IDENTIFIER -> bt
LINE 3 | SYMBOL     -> [
LINE 3 | SYMBOL     -> ]
LINE 3 | SYMBOL     -> ,
LINE 3 | KEYWORD    -> int
LINE 3 | IDENTIFIER -> wt
LINE 3 | SYMBOL     -> [
LINE 3 | SYMBOL     -> ]
LINE 3 | SYMBOL     -> )
LINE 4 | SYMBOL     -> {
LINE 5 | IDENTIFIER -> wt
LINE 5 | SYMBOL     -> [
LINE 5 | NUMBER     -> 0
LINE 5 | SYMBOL     -> ]
LINE 5 | OPERATOR   -> =
LINE 5 | NUMBER     -> 0
LINE 5 | SYMBOL     -> ;
LINE 6 | KEYWORD    -> for
LINE 6 | SYMBOL     -> (
LINE 6 | KEYWORD    -> int
LINE 6 | IDENTIFIER -> i
LINE 6 | OPERATOR   -> =
LINE 6 | NUMBER     -> 1
LINE 6 | SYMBOL     -> ;
LINE 6 | IDENTIFIER -> i
LINE 6 | OPERATOR   -> <
LINE 6 | IDENTIFIER -> n
LINE 6 | SYMBOL     -> ;
LINE 6 | IDENTIFIER -> i
LINE 6 | OPERATOR   -> ++
LINE 6 | SYMBOL     -> )
LINE 7 | SYMBOL     -> {
LINE 8 | KEYWORD    -> if
LINE 8 | SYMBOL     -> (
LINE 8 | IDENTIFIER -> bt
LINE 8 | SYMBOL     -> [
LINE 8 | IDENTIFIER -> i
LINE 8 | OPERATOR   -> -
LINE 8 | NUMBER     -> 1
LINE 8 | SYMBOL     -> ]
LINE 8 | OPERATOR   -> <
LINE 8 | IDENTIFIER -> at
LINE 8 | SYMBOL     -> [
LINE 8 | IDENTIFIER -> i
LINE 8 | SYMBOL     -> ]
LINE 8 | SYMBOL     -> )
LINE 9 | SYMBOL     -> {
LINE 10 | IDENTIFIER -> wt
LINE 10 | SYMBOL     -> [
LINE 10 | IDENTIFIER -> i
LINE 10 | SYMBOL     -> ]
LINE 10 | OPERATOR   -> =
LINE 10 | NUMBER     -> 0
LINE 10 | SYMBOL     -> ;
LINE 11 | SYMBOL     -> }
LINE 12 | KEYWORD    -> else
LINE 13 | SYMBOL     -> {
LINE 14 | IDENTIFIER -> wt
LINE 14 | SYMBOL     -> [
LINE 14 | IDENTIFIER -> i
LINE 14 | SYMBOL     -> ]
LINE 14 | OPERATOR   -> =
LINE 14 | IDENTIFIER -> bt
LINE 14 | SYMBOL     -> [
LINE 14 | IDENTIFIER -> i
LINE 14 | OPERATOR   -> -
LINE 14 | NUMBER     -> 1
LINE 14 | SYMBOL     -> ]
LINE 14 | OPERATOR   -> -
LINE 14 | IDENTIFIER -> at
LINE 14 | SYMBOL     -> [
LINE 14 | IDENTIFIER -> i
LINE 14 | SYMBOL     -> ]
LINE 14 | SYMBOL     -> ;
LINE 15 | SYMBOL     -> }
LINE 16 | SYMBOL     -> }
LINE 17 | SYMBOL     -> }
LINE 19 | KEYWORD    -> int
LINE 19 | IDENTIFIER -> main
LINE 19 | SYMBOL     -> (
LINE 19 | SYMBOL     -> )
LINE 20 | SYMBOL     -> {
LINE 21 | KEYWORD    -> int
LINE 21 | IDENTIFIER -> n
LINE 21 | SYMBOL     -> ;
LINE 22 | IDENTIFIER -> printf
LINE 22 | SYMBOL     -> (
LINE 22 | UNKNOWN    -> "
LINE 22 | IDENTIFIER -> Enter
LINE 22 | IDENTIFIER -> the
LINE 22 | IDENTIFIER -> number
LINE 22 | IDENTIFIER -> of
LINE 22 | IDENTIFIER -> processes
LINE 22 | UNKNOWN    -> :
LINE 22 | UNKNOWN    -> "
LINE 22 | SYMBOL     -> )
LINE 22 | SYMBOL     -> ;
LINE 23 | IDENTIFIER -> scanf
LINE 23 | SYMBOL     -> (
LINE 23 | UNKNOWN    -> "
LINE 23 | UNKNOWN    -> %
LINE 23 | IDENTIFIER -> d
LINE 23 | UNKNOWN    -> "
LINE 23 | SYMBOL     -> ,
LINE 23 | UNKNOWN    -> &
LINE 23 | IDENTIFIER -> n
LINE 23 | SYMBOL     -> )
LINE 23 | SYMBOL     -> ;
LINE 24 | KEYWORD    -> int
LINE 24 | IDENTIFIER -> at
LINE 24 | SYMBOL     -> [
LINE 24 | IDENTIFIER -> n
LINE 24 | SYMBOL     -> ]
LINE 24 | SYMBOL     -> ,
LINE 24 | IDENTIFIER -> bt
LINE 24 | SYMBOL     -> [
LINE 24 | IDENTIFIER -> n
LINE 24 | SYMBOL     -> ]
LINE 24 | SYMBOL     -> ,
LINE 24 | IDENTIFIER -> wt
LINE 24 | SYMBOL     -> [
LINE 24 | IDENTIFIER -> n
LINE 24 | SYMBOL     -> ]
LINE 24 | SYMBOL     -> ;
LINE 25 | KEYWORD    -> for
LINE 25 | SYMBOL     -> (
LINE 25 | KEYWORD    -> int
LINE 25 | IDENTIFIER -> i
LINE 25 | OPERATOR   -> =
LINE 25 | NUMBER     -> 0
LINE 25 | SYMBOL     -> ;
LINE 25 | IDENTIFIER -> i
LINE 25 | OPERATOR   -> <
LINE 25 | IDENTIFIER -> n
LINE 25 | SYMBOL     -> ;
LINE 25 | IDENTIFIER -> i
LINE 25 | OPERATOR   -> ++
LINE 25 | SYMBOL     -> )
LINE 26 | SYMBOL     -> {
LINE 27 | IDENTIFIER -> printf
LINE 27 | SYMBOL     -> (
LINE 27 | UNKNOWN    -> "
LINE 27 | IDENTIFIER -> Enter
LINE 27 | IDENTIFIER -> the
LINE 27 | IDENTIFIER -> arrival
LINE 27 | IDENTIFIER -> time
LINE 27 | IDENTIFIER -> of
LINE 27 | IDENTIFIER -> process
LINE 27 | UNKNOWN    -> %
LINE 27 | IDENTIFIER -> d
LINE 27 | UNKNOWN    -> :
LINE 27 | UNKNOWN    -> "
LINE 27 | SYMBOL     -> ,
LINE 27 | IDENTIFIER -> i
LINE 27 | OPERATOR   -> +
LINE 27 | NUMBER     -> 1
LINE 27 | SYMBOL     -> )
LINE 27 | SYMBOL     -> ;
LINE 28 | IDENTIFIER -> scanf
LINE 28 | SYMBOL     -> (
LINE 28 | UNKNOWN    -> "
LINE 28 | UNKNOWN    -> %
LINE 28 | IDENTIFIER -> d
LINE 28 | UNKNOWN    -> "
LINE 28 | SYMBOL     -> ,
LINE 28 | UNKNOWN    -> &
LINE 28 | IDENTIFIER -> at
LINE 28 | SYMBOL     -> [
LINE 28 | IDENTIFIER -> i
LINE 28 | SYMBOL     -> ]
LINE 28 | SYMBOL     -> )
LINE 28 | SYMBOL     -> ;
LINE 29 | IDENTIFIER -> printf
LINE 29 | SYMBOL     -> (
LINE 29 | UNKNOWN    -> "
LINE 29 | IDENTIFIER -> Enter
LINE 29 | IDENTIFIER -> the
LINE 29 | IDENTIFIER -> burst
LINE 29 | IDENTIFIER -> time
LINE 29 | IDENTIFIER -> of
LINE 29 | IDENTIFIER -> process
LINE 29 | UNKNOWN    -> %
LINE 29 | IDENTIFIER -> d
LINE 29 | UNKNOWN    -> :
LINE 29 | UNKNOWN    -> "
LINE 29 | SYMBOL     -> ,
LINE 29 | IDENTIFIER -> i
LINE 29 | OPERATOR   -> +
LINE 29 | NUMBER     -> 1
LINE 29 | SYMBOL     -> )
LINE 29 | SYMBOL     -> ;
LINE 30 | IDENTIFIER -> scanf
LINE 30 | SYMBOL     -> (
LINE 30 | UNKNOWN    -> "
LINE 30 | UNKNOWN    -> %
LINE 30 | IDENTIFIER -> d
LINE 30 | UNKNOWN    -> "
LINE 30 | SYMBOL     -> ,
LINE 30 | UNKNOWN    -> &
LINE 30 | IDENTIFIER -> bt
LINE 30 | SYMBOL     -> [
LINE 30 | IDENTIFIER -> i
LINE 30 | SYMBOL     -> ]
LINE 30 | SYMBOL     -> )
LINE 30 | SYMBOL     -> ;
LINE 31 | SYMBOL     -> }
LINE 32 | KEYWORD    -> for
LINE 32 | SYMBOL     -> (
LINE 32 | KEYWORD    -> int
LINE 32 | IDENTIFIER -> i
LINE 32 | OPERATOR   -> =
LINE 32 | NUMBER     -> 0
LINE 32 | SYMBOL     -> ;
LINE 32 | IDENTIFIER -> i
LINE 32 | OPERATOR   -> <
LINE 32 | IDENTIFIER -> n
LINE 32 | SYMBOL     -> ;
LINE 32 | IDENTIFIER -> i
LINE 32 | OPERATOR   -> ++
LINE 32 | SYMBOL     -> )
LINE 33 | SYMBOL     -> {
LINE 34 | KEYWORD    -> for
LINE 34 | SYMBOL     -> (
LINE 34 | KEYWORD    -> int
LINE 34 | IDENTIFIER -> j
LINE 34 | OPERATOR   -> =
LINE 34 | NUMBER     -> 0
LINE 34 | SYMBOL     -> ;
LINE 34 | IDENTIFIER -> j
LINE 34 | OPERATOR   -> <
LINE 34 | IDENTIFIER -> n
LINE 34 | OPERATOR   -> -
LINE 34 | IDENTIFIER -> i
LINE 34 | OPERATOR   -> -
LINE 34 | NUMBER     -> 1
LINE 34 | SYMBOL     -> ;
LINE 34 | IDENTIFIER -> j
LINE 34 | OPERATOR   -> ++
LINE 34 | SYMBOL     -> )
LINE 35 | SYMBOL     -> {
LINE 36 | KEYWORD    -> if
LINE 36 | SYMBOL     -> (
LINE 36 | IDENTIFIER -> at
LINE 36 | SYMBOL     -> [
LINE 36 | IDENTIFIER -> j
LINE 36 | SYMBOL     -> ]
LINE 36 | OPERATOR   -> >
LINE 36 | IDENTIFIER -> at
LINE 36 | SYMBOL     -> [
LINE 36 | IDENTIFIER -> j
LINE 36 | OPERATOR   -> +
LINE 36 | NUMBER     -> 1
LINE 36 | SYMBOL     -> ]
LINE 36 | SYMBOL     -> )
LINE 37 | SYMBOL     -> {
LINE 38 | KEYWORD    -> int
LINE 38 | IDENTIFIER -> temp
LINE 38 | OPERATOR   -> =
LINE 38 | IDENTIFIER -> at
LINE 38 | SYMBOL     -> [
LINE 38 | IDENTIFIER -> j
LINE 38 | SYMBOL     -> ]
LINE 38 | SYMBOL     -> ;
LINE 39 | IDENTIFIER -> at
LINE 39 | SYMBOL     -> [
LINE 39 | IDENTIFIER -> j
LINE 39 | SYMBOL     -> ]
LINE 39 | OPERATOR   -> =
LINE 39 | IDENTIFIER -> at
LINE 39 | SYMBOL     -> [
LINE 39 | IDENTIFIER -> j
LINE 39 | OPERATOR   -> +
LINE 39 | NUMBER     -> 1
LINE 39 | SYMBOL     -> ]
LINE 39 | SYMBOL     -> ;
LINE 40 | IDENTIFIER -> at
LINE 40 | SYMBOL     -> [
LINE 40 | IDENTIFIER -> j
LINE 40 | OPERATOR   -> +
LINE 40 | NUMBER     -> 1
LINE 40 | SYMBOL     -> ]
LINE 40 | OPERATOR   -> =
LINE 40 | IDENTIFIER -> temp
LINE 40 | SYMBOL     -> ;
LINE 41 | IDENTIFIER -> temp
LINE 41 | OPERATOR   -> =
LINE 41 | IDENTIFIER -> bt
LINE 41 | SYMBOL     -> [
LINE 41 | IDENTIFIER -> j
LINE 41 | SYMBOL     -> ]
LINE 41 | SYMBOL     -> ;
LINE 42 | IDENTIFIER -> bt
LINE 42 | SYMBOL     -> [
LINE 42 | IDENTIFIER -> j
LINE 42 | SYMBOL     -> ]
LINE 42 | OPERATOR   -> =
LINE 42 | IDENTIFIER -> bt
LINE 42 | SYMBOL     -> [
LINE 42 | IDENTIFIER -> j
LINE 42 | OPERATOR   -> +
LINE 42 | NUMBER     -> 1
LINE 42 | SYMBOL     -> ]
LINE 42 | SYMBOL     -> ;
LINE 43 | IDENTIFIER -> bt
LINE 43 | SYMBOL     -> [
LINE 43 | IDENTIFIER -> j
LINE 43 | OPERATOR   -> +
LINE 43 | NUMBER     -> 1
LINE 43 | SYMBOL     -> ]
LINE 43 | OPERATOR   -> =
LINE 43 | IDENTIFIER -> temp
LINE 43 | SYMBOL     -> ;
LINE 44 | SYMBOL     -> }
LINE 45 | SYMBOL     -> }
LINE 46 | SYMBOL     -> }
LINE 48 | IDENTIFIER -> findwaitingtime
LINE 48 | SYMBOL     -> (
LINE 48 | IDENTIFIER -> at
LINE 48 | SYMBOL     -> ,
LINE 48 | IDENTIFIER -> n
LINE 48 | SYMBOL     -> ,
LINE 48 | IDENTIFIER -> bt
LINE 48 | SYMBOL     -> ,
LINE 48 | IDENTIFIER -> wt
LINE 48 | SYMBOL     -> )
LINE 48 | SYMBOL     -> ;
LINE 49 | IDENTIFIER -> printf
LINE 49 | SYMBOL     -> (
LINE 49 | UNKNOWN    -> "
LINE 49 | IDENTIFIER -> Processes
LINE 49 | UNKNOWN    -> \
LINE 49 | IDENTIFIER -> tArrival
LINE 49 | IDENTIFIER -> Time
LINE 49 | UNKNOWN    -> \
LINE 49 | IDENTIFIER -> tBurst
LINE 49 | IDENTIFIER -> Time
LINE 49 | UNKNOWN    -> \
LINE 49 | IDENTIFIER -> tWaiting
LINE 49 | IDENTIFIER -> Time
LINE 49 | UNKNOWN    -> \
LINE 49 | IDENTIFIER -> n
LINE 49 | UNKNOWN    -> "
LINE 49 | SYMBOL     -> )
LINE 49 | SYMBOL     -> ;
LINE 50 | KEYWORD    -> for
LINE 50 | SYMBOL     -> (
LINE 50 | KEYWORD    -> int
LINE 50 | IDENTIFIER -> i
LINE 50 | OPERATOR   -> =
LINE 50 | NUMBER     -> 0
LINE 50 | SYMBOL     -> ;
LINE 50 | IDENTIFIER -> i
LINE 50 | OPERATOR   -> <
LINE 50 | IDENTIFIER -> n
LINE 50 | SYMBOL     -> ;
LINE 50 | IDENTIFIER -> i
LINE 50 | OPERATOR   -> ++
LINE 50 | SYMBOL     -> )
LINE 51 | SYMBOL     -> {
LINE 52 | IDENTIFIER -> printf
LINE 52 | SYMBOL     -> (
LINE 52 | UNKNOWN    -> "
LINE 52 | UNKNOWN    -> %
LINE 52 | IDENTIFIER -> d
LINE 52 | UNKNOWN    -> \
LINE 52 | IDENTIFIER -> t
LINE 52 | UNKNOWN    -> \
LINE 52 | IDENTIFIER -> t
LINE 52 | UNKNOWN    -> %
LINE 52 | IDENTIFIER -> d
LINE 52 | UNKNOWN    -> \
LINE 52 | IDENTIFIER -> t
LINE 52 | UNKNOWN    -> \
LINE 52 | IDENTIFIER -> t
LINE 52 | UNKNOWN    -> %
LINE 52 | IDENTIFIER -> d
LINE 52 | UNKNOWN    -> \
LINE 52 | IDENTIFIER -> t
LINE 52 | UNKNOWN    -> \
LINE 52 | IDENTIFIER -> t
LINE 52 | UNKNOWN    -> %
LINE 52 | IDENTIFIER -> d
LINE 52 | UNKNOWN    -> \
LINE 52 | IDENTIFIER -> n
LINE 52 | UNKNOWN    -> "
LINE 52 | SYMBOL     -> ,
LINE 52 | IDENTIFIER -> i
LINE 52 | OPERATOR   -> +
LINE 52 | NUMBER     -> 1
LINE 52 | SYMBOL     -> ,
LINE 52 | IDENTIFIER -> at
LINE 52 | SYMBOL     -> [
LINE 52 | IDENTIFIER -> i
LINE 52 | SYMBOL     -> ]
LINE 52 | SYMBOL     -> ,
LINE 52 | IDENTIFIER -> bt
LINE 52 | SYMBOL     -> [
LINE 52 | IDENTIFIER -> i
LINE 52 | SYMBOL     -> ]
LINE 52 | SYMBOL     -> ,
LINE 52 | IDENTIFIER -> wt
LINE 52 | SYMBOL     -> [
LINE 52 | IDENTIFIER -> i
LINE 52 | SYMBOL     -> ]
LINE 52 | SYMBOL     -> )
LINE 52 | SYMBOL     -> ;
LINE 53 | SYMBOL     -> }
LINE 54 | KEYWORD    -> return
LINE 54 | NUMBER     -> 0
LINE 54 | SYMBOL     -> ;
LINE 55 | SYMBOL     -> }
